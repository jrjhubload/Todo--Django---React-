{"ast":null,"code":"var _jsxFileName = \"/Users/main/Personal/Work/NeST/Learn/React Stack/Todo (Django & React)/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// --- React Frontend Setup Instructions ---\n// 1. If you haven't already, create a new React app:\n//    npx create-react-app my-todo-app\n//    cd my-todo-app\n//\n// 2. Install Tailwind CSS (if not already set up):\n//    npm install -D tailwindcss postcss autoprefixer\n//    npx tailwindcss init -p\n//    (Then configure your tailwind.config.js to scan your files)\n//\n// 3. Replace the content of src/App.js with the code below.\n//\n// 4. Start the React development server:\n//    npm start\n//\n//    Ensure your Django backend is also running (python manage.py runserver)\n//    The React app typically runs on http://localhost:3000\n\nimport React, { useState, useEffect } from 'react';\n\n// Main App component for the To-Do application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to hold the list of To-Do items\n  const [todos, setTodos] = useState([]);\n  // State for the new To-Do title input field\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  // State for the new To-Do description input field\n  const [newTodoDescription, setNewTodoDescription] = useState('');\n  // State to manage the currently edited To-Do item\n  const [editingTodo, setEditingTodo] = useState(null);\n\n  // Base URL for the Django API\n  const API_BASE_URL = 'http://localhost:8000/api/item/';\n\n  // useEffect hook to fetch To-Do items when the component mounts\n  useEffect(() => {\n    fetchTodos();\n  }, []); // Empty dependency array means this runs once on mount\n\n  // Function to fetch To-Do items from the Django API\n  const fetchTodos = async () => {\n    const token = localStorage.getItem('access_token'); // Or wherever you store it\n    try {\n      const response = await fetch(API_BASE_URL, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Include the token\n        }\n      });\n      // ... rest of your fetch logic\n    } catch (error) {\n      console.error(\"Error fetching todos:\", error);\n    }\n  };\n\n  // Function to add a new To-Do item\n  const addTodo = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    if (!newTodoTitle.trim()) return; // Don't add empty titles\n\n    const newTodo = {\n      title: newTodoTitle,\n      description: newTodoDescription,\n      completed: false // New todos are not completed by default\n    };\n    try {\n      const response = await fetch(API_BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTodo)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      await response.json(); // We don't necessarily need the response data, but consume it\n      setNewTodoTitle(''); // Clear the input field\n      setNewTodoDescription(''); // Clear the description input field\n      fetchTodos(); // Re-fetch todos to update the list\n    } catch (error) {\n      console.error(\"Error adding todo:\", error);\n    }\n  };\n\n  // Function to toggle the completion status of a To-Do item\n  const toggleComplete = async todo => {\n    const updatedTodo = {\n      ...todo,\n      completed: !todo.completed\n    };\n    try {\n      const response = await fetch(`${API_BASE_URL}${todo.id}/`, {\n        method: 'PUT',\n        // Use PUT for full update\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedTodo)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      await response.json();\n      fetchTodos(); // Re-fetch to reflect the change\n    } catch (error) {\n      console.error(\"Error updating todo:\", error);\n    }\n  };\n\n  // Function to delete a To-Do item\n  const deleteTodo = async id => {\n    try {\n      const response = await fetch(`${API_BASE_URL}${id}/`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // No content in DELETE response, just check for success status\n      fetchTodos(); // Re-fetch to remove the deleted item from the list\n    } catch (error) {\n      console.error(\"Error deleting todo:\", error);\n    }\n  };\n\n  // Function to start editing a To-Do item\n  const startEditing = todo => {\n    setEditingTodo({\n      ...todo\n    }); // Set a copy of the todo to be edited\n  };\n\n  // Function to handle changes in the editing form\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditingTodo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Function to save the edited To-Do item\n  const saveEdit = async () => {\n    if (!editingTodo || !editingTodo.title.trim()) return;\n    try {\n      const response = await fetch(`${API_BASE_URL}${editingTodo.id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editingTodo)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      await response.json();\n      setEditingTodo(null); // Clear editing state\n      fetchTodos(); // Re-fetch to update the list\n    } catch (error) {\n      console.error(\"Error saving edit:\", error);\n    }\n  };\n\n  // Function to cancel editing\n  const cancelEdit = () => {\n    setEditingTodo(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-400 to-purple-600 flex items-center justify-center p-4 font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-xl shadow-2xl w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-center text-gray-800 mb-8\",\n        children: \"My To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTodo,\n        className: \"mb-8 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTodoTitle,\n          onChange: e => setNewTodoTitle(e.target.value),\n          placeholder: \"Add new todo title\",\n          className: \"w-full p-3 border-2 border-blue-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newTodoDescription,\n          onChange: e => setNewTodoDescription(e.target.value),\n          placeholder: \"Description (optional)\",\n          rows: \"3\",\n          className: \"w-full p-3 border-2 border-blue-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200 resize-y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-blue-600 text-white p-3 rounded-lg font-semibold hover:bg-blue-700 transition duration-200 transform hover:scale-105 shadow-md\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-500 text-lg\",\n          children: \"No todos yet! Add one above.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex flex-col md:flex-row items-start md:items-center justify-between p-4 rounded-lg shadow-md transition duration-200 ease-in-out\n                  ${todo.completed ? 'bg-green-100 border-l-4 border-green-500' : 'bg-gray-50 border-l-4 border-blue-500'}`,\n          children: [editingTodo && editingTodo.id === todo.id ?\n          /*#__PURE__*/\n          // Editing mode\n          _jsxDEV(\"div\", {\n            className: \"flex-1 w-full space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              value: editingTodo.title,\n              onChange: handleEditChange,\n              className: \"w-full p-2 border-2 border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: editingTodo.description || '',\n              onChange: handleEditChange,\n              rows: \"2\",\n              className: \"w-full p-2 border-2 border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 resize-y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: saveEdit,\n                className: \"bg-purple-600 text-white px-3 py-1 rounded-md text-sm font-semibold hover:bg-purple-700 transition duration-200\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelEdit,\n                className: \"bg-gray-400 text-white px-3 py-1 rounded-md text-sm font-semibold hover:bg-gray-500 transition duration-200\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this) :\n          /*#__PURE__*/\n          // Display mode\n          _jsxDEV(\"div\", {\n            className: \"flex-1 pr-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: `text-lg font-semibold cursor-pointer ${todo.completed ? 'line-through text-gray-500' : 'text-gray-800'}`,\n              onClick: () => toggleComplete(todo),\n              children: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 21\n            }, this), todo.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-sm text-gray-600 ${todo.completed ? 'line-through text-gray-400' : ''}`,\n              children: todo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-400 mt-1 block\",\n              children: [\"Created: \", new Date(todo.created_at).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 19\n          }, this), !editingTodo || editingTodo.id !== todo.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col md:flex-row items-end md:items-center space-y-2 md:space-y-0 md:space-x-2 mt-3 md:mt-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(todo),\n              className: \"bg-yellow-500 text-white px-3 py-1 rounded-md text-sm font-semibold hover:bg-yellow-600 transition duration-200 shadow-sm\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTodo(todo.id),\n              className: \"bg-red-500 text-white px-3 py-1 rounded-md text-sm font-semibold hover:bg-red-600 transition duration-200 shadow-sm\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 19\n          }, this) : null]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mNjng6/izREE2rj/IEJAnpJ7vC4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodoTitle","setNewTodoTitle","newTodoDescription","setNewTodoDescription","editingTodo","setEditingTodo","API_BASE_URL","fetchTodos","token","localStorage","getItem","response","fetch","headers","error","console","addTodo","e","preventDefault","trim","newTodo","title","description","completed","method","body","JSON","stringify","ok","Error","status","json","toggleComplete","todo","updatedTodo","id","deleteTodo","startEditing","handleEditChange","name","value","target","prev","saveEdit","cancelEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","rows","length","map","onClick","Date","created_at","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/main/Personal/Work/NeST/Learn/React Stack/Todo (Django & React)/frontend/src/App.js"],"sourcesContent":["// --- React Frontend Setup Instructions ---\n// 1. If you haven't already, create a new React app:\n//    npx create-react-app my-todo-app\n//    cd my-todo-app\n//\n// 2. Install Tailwind CSS (if not already set up):\n//    npm install -D tailwindcss postcss autoprefixer\n//    npx tailwindcss init -p\n//    (Then configure your tailwind.config.js to scan your files)\n//\n// 3. Replace the content of src/App.js with the code below.\n//\n// 4. Start the React development server:\n//    npm start\n//\n//    Ensure your Django backend is also running (python manage.py runserver)\n//    The React app typically runs on http://localhost:3000\n\nimport React, { useState, useEffect } from 'react';\n\n// Main App component for the To-Do application\nfunction App() {\n  // State to hold the list of To-Do items\n  const [todos, setTodos] = useState([]);\n  // State for the new To-Do title input field\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  // State for the new To-Do description input field\n  const [newTodoDescription, setNewTodoDescription] = useState('');\n  // State to manage the currently edited To-Do item\n  const [editingTodo, setEditingTodo] = useState(null);\n\n  // Base URL for the Django API\n  const API_BASE_URL = 'http://localhost:8000/api/item/';\n\n  // useEffect hook to fetch To-Do items when the component mounts\n  useEffect(() => {\n    fetchTodos();\n  }, []); // Empty dependency array means this runs once on mount\n\n  // Function to fetch To-Do items from the Django API\n  const fetchTodos = async () => {\n    const token = localStorage.getItem('access_token'); // Or wherever you store it\n    try {\n        const response = await fetch(API_BASE_URL, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}` // Include the token\n            }\n        });\n        // ... rest of your fetch logic\n    } catch (error) {\n        console.error(\"Error fetching todos:\", error);\n    }\n};\n\n  // Function to add a new To-Do item\n  const addTodo = async (e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    if (!newTodoTitle.trim()) return; // Don't add empty titles\n\n    const newTodo = {\n      title: newTodoTitle,\n      description: newTodoDescription,\n      completed: false, // New todos are not completed by default\n    };\n\n    try {\n      const response = await fetch(API_BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newTodo),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      await response.json(); // We don't necessarily need the response data, but consume it\n      setNewTodoTitle(''); // Clear the input field\n      setNewTodoDescription(''); // Clear the description input field\n      fetchTodos(); // Re-fetch todos to update the list\n    } catch (error) {\n      console.error(\"Error adding todo:\", error);\n    }\n  };\n\n  // Function to toggle the completion status of a To-Do item\n  const toggleComplete = async (todo) => {\n    const updatedTodo = { ...todo, completed: !todo.completed };\n\n    try {\n      const response = await fetch(`${API_BASE_URL}${todo.id}/`, {\n        method: 'PUT', // Use PUT for full update\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedTodo),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      await response.json();\n      fetchTodos(); // Re-fetch to reflect the change\n    } catch (error) {\n      console.error(\"Error updating todo:\", error);\n    }\n  };\n\n  // Function to delete a To-Do item\n  const deleteTodo = async (id) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}${id}/`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // No content in DELETE response, just check for success status\n      fetchTodos(); // Re-fetch to remove the deleted item from the list\n    } catch (error) {\n      console.error(\"Error deleting todo:\", error);\n    }\n  };\n\n  // Function to start editing a To-Do item\n  const startEditing = (todo) => {\n    setEditingTodo({ ...todo }); // Set a copy of the todo to be edited\n  };\n\n  // Function to handle changes in the editing form\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setEditingTodo((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Function to save the edited To-Do item\n  const saveEdit = async () => {\n    if (!editingTodo || !editingTodo.title.trim()) return;\n\n    try {\n      const response = await fetch(`${API_BASE_URL}${editingTodo.id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(editingTodo),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      await response.json();\n      setEditingTodo(null); // Clear editing state\n      fetchTodos(); // Re-fetch to update the list\n    } catch (error) {\n      console.error(\"Error saving edit:\", error);\n    }\n  };\n\n  // Function to cancel editing\n  const cancelEdit = () => {\n    setEditingTodo(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-400 to-purple-600 flex items-center justify-center p-4 font-sans\">\n      <div className=\"bg-white p-8 rounded-xl shadow-2xl w-full max-w-md\">\n        <h1 className=\"text-4xl font-extrabold text-center text-gray-800 mb-8\">\n          My To-Do List\n        </h1>\n\n        {/* To-Do Input Form */}\n        <form onSubmit={addTodo} className=\"mb-8 space-y-4\">\n          <input\n            type=\"text\"\n            value={newTodoTitle}\n            onChange={(e) => setNewTodoTitle(e.target.value)}\n            placeholder=\"Add new todo title\"\n            className=\"w-full p-3 border-2 border-blue-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200\"\n          />\n          <textarea\n            value={newTodoDescription}\n            onChange={(e) => setNewTodoDescription(e.target.value)}\n            placeholder=\"Description (optional)\"\n            rows=\"3\"\n            className=\"w-full p-3 border-2 border-blue-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200 resize-y\"\n          ></textarea>\n          <button\n            type=\"submit\"\n            className=\"w-full bg-blue-600 text-white p-3 rounded-lg font-semibold hover:bg-blue-700 transition duration-200 transform hover:scale-105 shadow-md\"\n          >\n            Add Todo\n          </button>\n        </form>\n\n        {/* To-Do List */}\n        <div className=\"space-y-4\">\n          {todos.length === 0 ? (\n            <p className=\"text-center text-gray-500 text-lg\">No todos yet! Add one above.</p>\n          ) : (\n            todos.map((todo) => (\n              <div\n                key={todo.id}\n                className={`flex flex-col md:flex-row items-start md:items-center justify-between p-4 rounded-lg shadow-md transition duration-200 ease-in-out\n                  ${todo.completed ? 'bg-green-100 border-l-4 border-green-500' : 'bg-gray-50 border-l-4 border-blue-500'}`\n                }\n              >\n                {editingTodo && editingTodo.id === todo.id ? (\n                  // Editing mode\n                  <div className=\"flex-1 w-full space-y-2\">\n                    <input\n                      type=\"text\"\n                      name=\"title\"\n                      value={editingTodo.title}\n                      onChange={handleEditChange}\n                      className=\"w-full p-2 border-2 border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                    />\n                    <textarea\n                      name=\"description\"\n                      value={editingTodo.description || ''}\n                      onChange={handleEditChange}\n                      rows=\"2\"\n                      className=\"w-full p-2 border-2 border-purple-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 resize-y\"\n                    ></textarea>\n                    <div className=\"flex justify-end space-x-2\">\n                      <button\n                        onClick={saveEdit}\n                        className=\"bg-purple-600 text-white px-3 py-1 rounded-md text-sm font-semibold hover:bg-purple-700 transition duration-200\"\n                      >\n                        Save\n                      </button>\n                      <button\n                        onClick={cancelEdit}\n                        className=\"bg-gray-400 text-white px-3 py-1 rounded-md text-sm font-semibold hover:bg-gray-500 transition duration-200\"\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  // Display mode\n                  <div className=\"flex-1 pr-4\">\n                    <h3\n                      className={`text-lg font-semibold cursor-pointer ${todo.completed ? 'line-through text-gray-500' : 'text-gray-800'}`}\n                      onClick={() => toggleComplete(todo)}\n                    >\n                      {todo.title}\n                    </h3>\n                    {todo.description && (\n                      <p className={`text-sm text-gray-600 ${todo.completed ? 'line-through text-gray-400' : ''}`}>\n                        {todo.description}\n                      </p>\n                    )}\n                    <span className=\"text-xs text-gray-400 mt-1 block\">\n                      Created: {new Date(todo.created_at).toLocaleDateString()}\n                    </span>\n                  </div>\n                )}\n\n                {!editingTodo || editingTodo.id !== todo.id ? (\n                  <div className=\"flex flex-col md:flex-row items-end md:items-center space-y-2 md:space-y-0 md:space-x-2 mt-3 md:mt-0\">\n                    <button\n                      onClick={() => startEditing(todo)}\n                      className=\"bg-yellow-500 text-white px-3 py-1 rounded-md text-sm font-semibold hover:bg-yellow-600 transition duration-200 shadow-sm\"\n                    >\n                      Edit\n                    </button>\n                    <button\n                      onClick={() => deleteTodo(todo.id)}\n                      className=\"bg-red-500 text-white px-3 py-1 rounded-md text-sm font-semibold hover:bg-red-600 transition duration-200 shadow-sm\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                ) : null}\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}